- Complete mission tree
- MiniMap in game : more detailed map, display peds, guns, radar focus,
evacuation red circle
- Mission objectives
- Play sound in end mission animation
- Remove debug info displayed in the console
 - Correct identification of object types during mission load, includes
vehicles, people, static objects, weapons, also setup sfx for weapons
 - Adding properties to:
   vehicle: max people can hold; speed per type; damage can inflict/recieve per type;
radius of damage when destroyed
   people: add IPA levels and their modification through gameplay menu and influence
of these levels on different properties of people - speed, inteligence, accuracy,
viewing range(?), health recovery(?); mods properties should affect IPAs; damage
recieved modifier, if we don't want to recalculate all the time; persuade power
points; persuade points needed to persuade - this value will be added to agent
that succesfully persuaded; weapon range modifier(?); accuracy modifier/property(?);
type of damage inflicted(?)
   weapons: type of damage/effect inflicted; destructabillity(bomb); radius of damage
area(?) - bomb, gauss, laser;
   static objects: damage recieve value; destructable or not
   all: type of damage that can be inflicted - windows can break from bullets/explosion,
but trees will burn from explosions only, people with shield vulnerable to explosions
only(?)
 - (remove this?)indexes within group of type for vehicles/people/weapons, to be used for minimap
drawing during briefing, they are as offsets in mission data in files, these offsets
have different use within original game code and transforming them from offsets to
indexes is required due to difference in realization in our project and in original
game, we have array per type and in original all data was loaded to memory as single
chunk which permitted to use offsets within this chunk - it is very fast method, these
indexes can be: 1 byte for type of group + 2 bytes for index within group; or we can
use 2 bytes, 9(10)bits will be used for index within group, bits that remain for group
type definition, although it can be slower and create some problems in future
 - A.L. - this one is complex
 - pathfinding directional to be used for simulation of people walking around city
 - damage inflicted by vehicles/weapons, variate by type of damage and range
 - state of vehicles/people/objects should change correctly due to gameplay:
   vehicles should start burning when their health is zero and stop after some time,
same for trees, people etc - switch of state due to damage
   damage type priority laser(highest)->explosion->burning->hit(lowest)
   when vehicle is destroyed, explosion should create damage to all in range
   change in behavior due to persuade
   "access card" make agent become police officer
   firing should have delay, correct delay per weapon(?)/ipa
   instant damage to vehicles/people/objects, current implementation is cumulative,
if 4 agents shoot inflicting 1 hp damage/agent at target with 2hp they will inflict
4hp damage it is incorrect, should be implemented with boolean on return to check
whether shooting is possible
 - animation for people/objects need to be fixed, to correctly represent every stage
of event/state:
   windows break when shot
   different objects burn
 - object positioning during drawing
 - map drawing still buggy
 - briefmenu enhance level require better handling of values some missions have 2
info costs, some 3, enhance cost same thing, the total number is const = 3 it
should be variable
 - rewrite PedInstance::inRange, include check for Z + objects
 - set weapons for enemy agents, because in gamedata weapons are not the same as
in original gameplay or are not present at all
-- These should be implemented in folowing order
 - add LUA support;
 - write simple A.L.;
 - write mission editor;
 - create new mission files using editor, based on original game mission files.
--
 - BriefMenu::handleRender() needs optimization, when info is maximum and last
 page is viewed briefing text display is very slow
 - Implements dragging in SelectMenu to pass a weapon from an agent to another.